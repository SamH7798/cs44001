#include"Coffee.hpp"

int main() {
	srand(time(NULL));

	char size;
	//Drink d;
	char topping = ' ';
	string name, order;
	double price = 0.0;
	
	vector<ConcreteCustomer> customers;

	ConcreteBarista b("Kelly");
	ConcreteCustomer c1("Mike", &b, nullptr), c2("Jim", &b, nullptr), c3("Karen", &b, nullptr);
	customers.push_back(c1); customers.push_back(c2); customers.push_back(c3);
	/*
	for (auto c : customers) {
		b.registerCustomer(&c);
	}
	*/
	int x = 0;
	int randTop, serveDec, index = 0;
	/*
	cout << "Welcome to Coffee Shack, can I get you [l]arge, [m]edium, or [s]mall coffee?: ";
	cin >> size;
	d.setSize(size);
	price = d.getPrice();
	*/
	
	while (x != 3) {
		 serveDec = rand() % 2 + 1;
		Drink* d = new Drink;
		
		if (serveDec == 2) {
			cout << "Welcome to Coffee Shack, can I get you [l]arge, [m]edium, or [s]mall coffee?: ";
			cin >> size;
			d->setSize(size);
			price = d->getPrice();
			do {
	
				cout << "Would you like to add [s]prinkles, [c]aramel, milk [f]oam, [i]ce or [n]ot?";
				cin >> topping;
				randTop = rand() % 5 + 1;
				/*
				switch (randTop) {	
					case 1: topping = 's'; break;
					case 2: topping = 'c'; break;
					case 3: topping = 'f'; break;
					case 4: topping = 'i'; break;
					case 5: topping = 'n'; break;
				}
				*/
				if (topping == 's') { Sprinkles s(d); order += s.getName(); price += s.getPrice(); }// cout << 's' << endl; }
				if (topping == 'c') { Caramel c(d);  order += c.getName(); price += c.getPrice(); }//cout << 'c' << endl;
			
			if (topping == 'f') { Foam f(d); order += f.getName(); price += f.getPrice(); }//cout << 'f' << endl;
		
			if (topping == 'i') { Ice i(d); order += i.getName(); price += i.getPrice(); }// cout << 'i' << endl;
			

			} while (topping != 'n');	
			cout << order << endl;
			d->setDrinkName(order);
			d->setPrice(price);

			cout<<"drink :" << d->getOrderName() << endl;
			cout << "Can I get your name?" << endl;
			cin >> name;
			ConcreteCustomer s(name, &b, d);
			b.registerCustomer(&s);
				
				b.drinkMade(order);
				//cout << name << ", Your order of a " << order << " is ready, that will be : " << price << " dollars" << endl;
				delete d;
				order = "";
				++index;
		}
		else { cout << "sevred" << endl; }
		++x;
	}

	
}
