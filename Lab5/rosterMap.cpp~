#include "rosterMap.hpp"

int main(int argc, char* argv[]) {

	if (argc <= 1) {
		cout << "usage: " << argv[0]
			<< " list of courses, dropouts last" << endl; exit(1);
	}

	// vector of courses of students
	map<Student, list<string>>  courseStudents;

	for (int i = 1; i < argc - 1; ++i) {
	
		readRoster(courseStudents, argv[i]);
		//cout << "\n\n" << argv[i] << "\n";
		//printRoster(courseStudents);
		//courseStudents.push_back(move(roster));
		
	}
	printRoster(courseStudents);

	/*
	// reading in dropouts
	list<Student> dropouts;
	readRoster(dropouts, argv[argc - 1]);
	cout << "\n\n dropouts \n"; printRoster(dropouts);

	list<Student> allStudents;  // master list of students

	for (auto& lst : courseStudents)
		allStudents.splice(allStudents.end(), lst);

	cout << "\n\n all students unsorted \n";
	printRoster(allStudents);

	allStudents.sort(); // sorting master list
	cout << "\n\n all students sorted \n"; printRoster(allStudents);

	allStudents.unique(); // eliminating duplicates
	cout << "\n\n all students, duplicates removed \n"; printRoster(allStudents);

	for (const auto& str : dropouts)  // removing individual dropouts
		allStudents.remove(str);
	cout << "\n\n all students, dropouts removed \n"; printRoster(allStudents);
	*/
}
